
import utilityClasses.EmailUtility;
import controllers.MovieController;
import controllers.RentController;
import controllers.ReturnController;
import exceptions.DataException;
import exceptions.InsertionException;
import exceptions.ValidationException;
import utilityClasses.DialogMessage;
import java.util.InputMismatchException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author raelg
 */
public class ReturnMoviePage extends javax.swing.JFrame {

    private ReturnController returnController;
    private MovieController movieController;
    private RentController rentController;
    private DialogMessage dialogMessage;
    private static final String EMPTY_STRING = "";

    private javax.swing.JLabel alertMessageLabel;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel enterMoviesIdLabel;
    private javax.swing.JTextField movieIdTextField;
    private javax.swing.JButton submitMovieIdButton;

    public ReturnMoviePage() {
        returnController = new ReturnController();
        movieController = new MovieController();
        rentController = new RentController();
        dialogMessage = new DialogMessage();

        initComponents();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        enterMoviesIdLabel = new javax.swing.JLabel();
        movieIdTextField = new javax.swing.JTextField();
        submitMovieIdButton = new javax.swing.JButton();
        alertMessageLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        enterMoviesIdLabel.setText("Please Enter Movie Id");

        submitMovieIdButton.setText("Submit");
        submitMovieIdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitMovieIdButtonActionPerformed(evt);
            }
        });

        alertMessageLabel.setText("                 ");

        emailLabel.setText("Please Enter Email For Receipt");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(123, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(submitMovieIdButton)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(alertMessageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(emailLabel)
                                                .addComponent(movieIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(enterMoviesIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(102, 102, 102))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(enterMoviesIdLabel)
                                .addGap(18, 18, 18)
                                .addComponent(movieIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(emailLabel)
                                .addGap(13, 13, 13)
                                .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(alertMessageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(submitMovieIdButton)
                                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void submitMovieIdButtonActionPerformed(java.awt.event.ActionEvent evt) {
        returnMovie();
    }

    // methods to return movie
    public void returnMovie() {
        getReturnedMovieById();
        dialogMessage.getSuccessMessage("your Movie has been successfuly returned. Thank you");
        sendEmail();
        dispose();
    }

    // get movie id to be returned. 
    private void getReturnedMovieById() {
        try {
            int movieId = getValidatedMovieIdValue();
            returnController.getRentedMovieTimeByMovieId(movieId);
            updateReturnedMovieStatus(movieId);

        } catch (InputMismatchException | ValidationException | DataException | InsertionException ex) {
            Logger.getLogger(ReturnMoviePage.class.getName()).log(Level.SEVERE, null, ex);
            alertMessageLabel.setText(ex.getMessage());

        }
    }

    // set movie status after being returned
    private void updateReturnedMovieStatus(int movieId) throws InsertionException {
        returnController.updateRentedMovie(movieId);
    }

    // define the receipt for the returned movie
    private String defineReceiptMessage() {
        return "value charged" + "/n" + "Thank you for renting with Xtra-Vision.";
    }
// send receipt by email

    public void sendEmail() {
        try {

            String email = getValidatedEmail();
            EmailUtility.sendEmail(email, defineReceiptMessage());

        } catch (MessagingException | ValidationException ex) {
            Logger.getLogger(ReturnMoviePage.class.getName()).log(Level.SEVERE, null, ex);
            alertMessageLabel.setText(ex.getMessage());
        }
    }

    // get movie id to return
    public int getValidatedMovieIdValue() throws ValidationException {
        if (!movieIdTextField.getText().equals(EMPTY_STRING)) {
            return Integer.parseInt(movieIdTextField.getText());
        }
        throw new ValidationException("Please enter movie id!");
    }
// get user email to receive receipt

    public String getValidatedEmail() throws ValidationException {
        if (!emailTextField.getText().equals(EMPTY_STRING)) {
            return emailTextField.getText();
        }
        throw new ValidationException("Please enter email!");
    }
}
